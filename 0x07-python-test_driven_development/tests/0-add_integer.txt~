	======================
How to use 0.add_integer.py
========   ==============

This module	 define an int addition function
     
Usage
=====	
retruns the addition of two int args passed to	 it

: :
    >>> add_integer = __import__('0.add_integer').add_integer
    >>> add_integer(2, 4)
    6

: :
    >>> add_integer(5, -3)
    2
    >>> add_integer(-2, 5)
    3

The  function also works with float
: :
    >>> add_integer(3.0, 2.5)
    5

float and int can be combined
: :
    >>> add_integer(3.2, 5)
    8
    >>> add_integer(6, -2.4)
    4

Second argument by default is 98. Its optional
: :
    >>> add_integer(2)
    100

If the args are not numbers
: :
    >>> add_integer("string", 3)
    Traceback (most recent call last):
    TypeError: a must be an integer
: :
    >>> add_integer(5, "fga")
    Traceback (most recent call last):
    TypeError: b must be an integer
: :
    >>> add_integer("str", "str")
    Traceback (most recent call last):
    TypeError: a must be an integer
: :
    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer
: :
    >>>  add_ integer(3, None)
    Traceback (most recent call last):
    TypeError: b must be an integer

infinity will make function to fail
: :
   >>> add_integer(float('inf'))
   Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

also Nan
: :
   >>> add_integer(2, float('nan'))
   Traceback (most recent call last):
   ValueError: cannot convert float NaN to integer
